\hh{Распределённые вычисления}\n\tРаспределённые вычисления - основная задача кластерной сети.
\n\h{Пакеты}\n\tПакет - архив с программой. Пакет может хранить несколько вариантов программы,
включая версии в машинном коде для различных платформ, или исходный код.
Вариант программы определяется набором слов. Определённые на данный момент слова:
windows, macosx, x86, x64, arm, arm64, sources. Создание и просмотр пакетов осуществляется с помощью API
ClusterPackage и программ командной строки ecfxpack и ecfxview.
\n\h{Ядро вычислений}\n\tЯдро для распределённых вычислений - динамическая библиотека, совместимая с Engine Runtime 1.8,
реализующая программный интерфейс ClusterTaskInterface. Версии ядра для различных платформ предоставляются с помощью пакета.
\n\h{Клиент вычислений}\n\tКлиент вычислений - произвольное приложение, являющееся заказчиком распределённых вычислений.
Клиент предоставляет ядро вычислений и входные данные, получает информацию о состоянии вычислений и в конце - результат вычислений.
Клиент вычислений создаётся с использованием API ClusterTaskClient.
Реализация клиента для входных данных специального вида доступна через программу командной строки ecfexec.
\n\h{Постановка задачи на вычисление}\n
1. Клиент вычислений подключается к кластеру и направляет запрос на ареду узлов, предоставляя пакет с ядром вычислений.\n
2. Каждый сервер принимает решение о возможности ареды. Сервер отказывает, если он не выбран для распределённых вычислений в
графическом интерфейсе сервера или если он уже выполняет вычисления.\n
3. Сервера выбирают версию ядра для исполнения. Первым приоритетом для выбора является машинная версия под архитектуру сервера.
Вторым - версия в исходном коде. Сервер отказывает в ареде, если нет ни одной из этих версий или если не удалось произвести
компиляцию версии в исходных кодах.\n
4. На каждом узле, принимающем участие в вычислениях, создаётся изолированный процесс для вычислений.
Этот процесс загружает библиотеку с ядром вычислений, создаёт пул потоков по числу ядер узла, выполняет задачу Init, если
ядро её предоставляет.\n
5. Клиент вычислений получает таблицу узлов, учавствующих в вычислениях.
Он выбирает некоторым образом первичный узел и инициирует на нём задачу Main со входными данными вычислений.\n
6. В процессе вычислений задача вычислений может создавать новые задачи и направлять их на исполнение
на произвольном узле кластера. Задачи могут динамически перераспределяться между узлами для более равномерной нагрузки.\n
7. По окончании вычислений ядро вычислений (в одной из задач) объявляет результат вычислений.
Результат возвращается клиенту вычислений, процессы исполнения задач останавливаются.